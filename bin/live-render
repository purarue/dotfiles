#!/usr/bin/env sh
#
# takes a markdown/latex file as the first argument, converts
# it to a pdf, and opens it in a pdf viewer.
# Whenever the file changes, it re-compiles, and the
# pdf viewer loads the changed file from disk.
# This uses okular, which supports live-reloading
# requires: pandoc, wkhtmltopdf, entr, okular, realpath

# can be changed to some other editor that supports live re-loading (e.g. zathura)
PDF_VIEWER=okular

# make sure filename was passed
if [ -z "$1" ]; then
	echo "You didn't pass a file to render as the first argument!"
	echo "e.g. live-render ~/Documents/notes.md"
	echo "e.g. live-render ~/Desktop/final-paper.tex"
	exit 1
fi

# make sure file exists
if [ ! -f "$1" ]; then
	echo "No such file: $1"
	exit 1
fi

FULL_PATH=$(realpath "$1")
FILENAME=$(basename "$1")

# PANDOC SOURCE TYPE
# can add additional filetypes by adding more case statements
case "$FILENAME" in
*\.md) PANDOC_TYPE='gfm' ;; # Github Flavored Markdown
*\.tex) PANDOC_TYPE='latex' ;; # Latex
*) printf "Unsupported file extension: %s\n" "$FILENAME" && exit 1 ;;
esac

RENDER_START=$(date +%s) # use unix time as an id
OUTPUT_FILE_NAME="/tmp/${RENDER_START}.pdf"
pandoc -f "$PANDOC_TYPE" -t html5 "$FULL_PATH" -o "$OUTPUT_FILE_NAME" # do initial render
$PDF_VIEWER "$OUTPUT_FILE_NAME" &# open with pdf viewer as background process
trap 'ps -p $! >/dev/null && kill $!' INT # kill pdf viewer when script exits
# when the file is changed/saved, re-compile
echo "$FULL_PATH" | entr pandoc -f "$PANDOC_TYPE" -t html5 "$FULL_PATH" -o "$OUTPUT_FILE_NAME"
