#!/usr/bin/env bash
# yadm bootstrap script
# Uses yay to install from AUR

if [[ ! $(command -v yay) ]]; then
	echo -e "Could not find yay. Install that and re-run bootstrap\nExiting..."
	exit 1
fi

echo "Checking ~/.config/yadm/packages.txt for any packages to install..."
for lib in $(cat "${HOME}/.config/yadm/packages.txt"); do
	if [[ ! $(yay -Q "${lib}") ]]; then # if package isn't installed
		read -p "Do you want to install '${lib}'? [Y/n] " -n 1 -r
		if [[ ! $REPLY =~ ^[Nn]$ ]]; then # REPLY is automatically used as read variable
			yay -S "${lib}"
		fi
	fi
done

if ! echo "$SHELL" | grep -q zsh; then
	if [[ ! "$(command -v zsh)" ]]; then
		sudo pacman -S zsh
	fi
	sudo chsh -s "$(command -v zsh)"
else
	echo "zsh is already set as your default shell"
fi

echo 'Setting up zsh directory structure...'
# make sure original oh-my-zsh files are removed
original_files=("${HOME}/.zshenv" "${HOME}/.zshrc" "${HOME}/.zsh_history" "${HOME}/.zprofile")

for file in "${original_files[@]}"; do
	if [[ -f "$file" ]]; then
		rm "$file"
	fi
done

echo 'Symlinking zshenv/zprofile...'
# ZDOTDIR is located at ~/.config/zsh
if [[ ! -f "${HOME}/.zshenv" ]]; then
  ln "${HOME}/.config/zsh/.zshenv" "${HOME}/.zshenv"
fi

# make sure personal aliases file exists so that zshrc souces fine
[[ ! -f "${ZDOTDIR}/personal_aliases" ]] && touch "${ZDOTDIR}/personal_aliases"

# Setting up default user directories
default_user_dirs=("code" "Desktop" "Documents" "Documents/Notes" "Documents/wallpapers" "Downloads" "Desktop/Screenshots" "Pictures" ".local" ".cache" ".credentials" "gdrive")

for d_name in "${default_user_dirs[@]}"; do
	if [[ ! -d "${HOME}/${d_name}" ]]; then
		mkdir -p "${HOME}/${d_name}"
	fi
done

echo 'Checking git config...'
# check for global name config
if [[ -z $(git config --global user.name) ]]; then
	printf "No global name set. Enter full name: "
	read -r githubusername
	git config --global user.name "$githubusername"
fi

# check for global email config
if [[ -z $(git config --global user.email) ]]; then
	printf "No global email set. Enter email connected to your GitHub account: "
	read -r githubemail
	git config --global user.email "$githubemail"
fi

if [[ -z "$EDITOR" ]]; then
	git config --global core.editor nano
else
	git config --global core.editor nvim
fi

# Install python packages

echo "Installing global python site-packages..."
python3 -m pip install -q --user -r ~/.config/yadm/python3_packages.txt

# speedtest installs 2 executable scripts
# speedtest and speedtest-cli, which both have the same
# functionatly. This removes speedtest-cli to make
# tab completion nicer
[[ $(command -v speedtest-cli) ]] && rm "$(command -v speedtest-cli)"

# ~/.npmrc defines the prefix as ~/.npm-packages
echo "Installing global npm packages..."
NPM_PKG_DIR="${HOME}/.npm-packages"
[[ ! -d "${NPM_PKG_DIR}" ]] && mkdir -p "${NPM_PKG_DIR}" && sudo chown -R "$(whoami)" "${NPM_PKG_DIR}"
while read -r npkg; do
	if ! ls -1 "$(npm root -g)" | grep -q "^${npkg}$"; then
		echo -e "Installing ${npkg}"
		npm install --global "${npkg}"
	fi
done <"${HOME}/.config/yadm/global_node_packages.txt"

# Check services
echo "Checking if default services are running..."
# CUPS and avahi are for printing
services=("NetworkManager" "avahi-daemon" "org.cups.cupsd" "cronie" "ntpd")
for serv in "${services[@]}"; do
	if ! systemctl show -p SubState --value "${serv}" | grep -q "running"; then
		echo -e "${serv} is not running, you should enable it with: 'sudo systemctl enable ${serv}'"
	fi
done

if ! systemctl show -p SubState --value "mariadb" | grep -q "running"; then
	printf "Setup mariadb by following %s\n" "https://wiki.archlinux.org/index.php/MariaDB"
fi

# Check for manually installed binaries, installed at /usr/local/bin

echo "Checking for manually installed binaries..."
binaries=("wait-for-internet" "genpasswd" "shortcuts" "largechar" "st")
for binary in "${binaries[@]}"; do
  if [ ! "$(command -v "$binary")" ]; then
    echo -e "Warning: Couldn't find ${binary}. Install it at https://github.com/seanbreckenridge/${binary}\n"
  fi
done

if [ "$(command -v shortcuts)" ]; then
  printf "Created %d shortcuts\n" "$(shortcuts create | wc -l)"
fi

dir-aliases
printf "Created %d directory aliases\n" "$(wc -l < "$ZDOTDIR/directory_aliases")"

echo "Installing nvim packages..."
nvim +PlugInstall +qall
