#!/usr/bin/env bash
# Sets up windows (WSL)

# setup zsh files

# delete default files if they exist
original_files=("${HOME}/.zshenv" "${HOME}/.zshrc" "${HOME}/.zsh_history")
for file in "${original_files[@]}"; do
	rm -rf "${file}"
done

# bash will typically source ~/.profile on shell launch
# if we haven't switched to zsh, a shell restart should
# cause this to be sourced
echo 'Setting up zsh profile...'
# shellcheck disable=SC2016
echo 'source "${HOME}/.profile"; cd ~' >"${HOME}/.zshenv"

# check if we have access to the my directories
# on my $PATH, to see if zsh has been properly configured
if [[ ! "$(command -v havecmd)" ]]; then
	printf "Issue finding 'havecmd', environment is not setup properly\n"
	printf "Try restarting the shell and making sure ~/.profile is getting sourced\n"
	exit 1
fi

# set zsh as shell
if ! grep ^"$(whoami)" /etc/passwd | cut -d':' -f7 | grep -q 'zsh'; then
	havecmd zsh || sudo apt install zsh
	sudo chsh -s "$(command -v zsh)" "$(whoami)"
	abort "Restart shell so that zsh environment is setup. Then re-run 'yadm bootstrap'"
else
	echo "zsh is already set as your default shell"
fi

# note: zsh is set as shell using the alacritty launcher options
declare -rx WSL_PACKAGES="${PACKAGE_DIR}/wsl_packages.txt"

set -e
havecmd go || {
	GO_TMPDIR="$(mktemp -d)"
	cd "$GO_TMPDIR" || exit $?
	wget 'https://go.dev/dl/go1.18.linux-amd64.tar.gz' -O './go.tar.gz'
	tar -xvf './go.tar.gz'
	sudo mv go /usr/local
}
mkdir -p ~/.local/bin
havecmd go || ln /usr/local/go/bin/go ~/.local/bin
install_go_cmds
set +e

for lib in $(spkglist "${WSL_PACKAGES}"); do
	if ! dpkg-query -W -f='${Status}' "${lib}" | grep -q "ok installed"; then # if package isn't installed
		sudo apt install "${lib}"
	fi
done

printf 'Install windows PPAs? [y/N] '
read -r -t 3
case "$REPLY" in
Y | y)
	windows-ppas
	;;
*)
	: # do nothing if user didn't respond Y/y
	;;
esac

# install rust manually
havecmd cargo || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# install yarn
havecmd yarn || curl -o- -L https://yarnpkg.com/install.sh | bash

# easier to install these using rust on WSL
WSL_MANUAL_INSTALLS=(exa bat)
havecmd cargo && {
	for pkg in "${WSL_MANUAL_INSTALLS[@]}"; do
		havecmd "${pkg}" || cargo install "${pkg}"
	done
}

havecmd dust || cargo install du-dust
havecmd find || cargo install fd-find

havecmd todo-txt && {
	havecmd todo.sh || ln -s "$(command -v todo-txt)" ~/.local/bin/todo.sh
}

python3 -m pip install -U ranger-fm

# some manual installs
havecmd shfmt || GO111MODULE=on go install -v 'mvdan.cc/sh/v3/cmd/shfmt@latest'

exit 0
