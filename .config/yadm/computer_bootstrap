#!/usr/bin/env bash

set -u
shared_user_dirs=("Repos" "Documents" "Downloads" "Shared" "Music" "data")
# create default user directories
case "$ON_OS" in
windows*)
	# on windows (WSL), link these to /mnt/c/
	# check the WHOME variable set in my .profile
	for d_name in "${shared_user_dirs[@]}"; do
		target="${WHOME}/${d_name}"
		if [[ ! -d "${HOME}/${d_name}" ]]; then
			[[ ! -d "${target}" ]] && mkdir -p "${target}"
			ln -s "${target}" "${HOME}/${d_name}"
		fi
	done
	;;
*)
	# otherwise
	default_user_dirs=("${shared_user_dirs[@]}")
	default_user_dirs+=("Pictures/Screenshots" ".local/bin" ".cache" ".credentials")
	for d_name in "${default_user_dirs[@]}"; do
		if [[ ! -d "${HOME}/${d_name}" ]]; then
			mkdir -p "${HOME}/${d_name}"
		fi
	done
	;;
esac
set +u

echo "Installing scientific python packages..."
declare -rx SCIPYTHON_PACKAGE_LIST="${PACKAGE_DIR}/scientific_python.txt" # probably don't have to install on android
python3 -m pip install --user -q -r "${SCIPYTHON_PACKAGE_LIST}"

install_python_personal "plus1" "https://github.com/seanbreckenridge/plus1"
install_python_personal "pythonanywhere_3_months" "https://github.com/seanbreckenridge/pythonanywhere-3-months"
install_python_personal "calcurse_load" "https://github.com/seanbreckenridge/calcurse-load"
install_python_personal "mpv-history-daemon" "https://github.com/seanbreckenridge/mpv-history-daemon"

havecmd gem || exit $?
echo "Installing global ruby packages..."
RUBY_GEMS_LIST="$(gem list | cut -d' ' -f1)"
while read -r rgem; do
	if ! grep -qx "${rgem}" <<<"${RUBY_GEMS_LIST}"; then
		printf "Installing %s\n" "${rgem}"
		gem install "${rgem}"
	fi
done < <(spkglist "${GLOBAL_GEM_LIST}")

havecmd cargo || exit $?
echo "Installing global cargo packages..."
CARGO_PACKAGE_LIST="${PACKAGE_DIR}/cargo_packages.txt"
CARGO_INSTALLED_PACKAGES="$(cargo install --list | sed -E -e '/^\s+/d; s|\s.*||')"
while read -r cargopkg; do
	if ! grep -qx "${cargopkg}" <<<"${CARGO_INSTALLED_PACKAGES}"; then
		printf "Installing %s\n" "${cargopkg}"
		cargo install "${cargopkg}"
	fi
done < <(spkglist "${CARGO_PACKAGE_LIST}")

havecmd go || exit $?
GO_PACKAGE_LIST="${PACKAGE_DIR}/go_packages.txt"
# takes a line from "$GO_PACKAGE_LIST"
# binary -> package source
# and installs it if the binary isn't already on your path
function install_go_package() {
	local -a packageinfo
	read -ra packageinfo <<<"${1}"
	havecmd "${packageinfo[0]}" || {
		# fails to build fsnotify on wsl
		[[ "${packageinfo[0]}" == 'twitchlive' && "${ON_OS}" =~ ^windows.* ]] && return
		go install -v "${packageinfo[1]}@latest"
	}
}

echo "Installing global go packages..."
while IFS= read -r go_line; do
	install_go_package "${go_line}"
done < <(spkglist "${GO_PACKAGE_LIST}")

havecmd emacs || exit $?
# Install doom emacs
if [[ ! -d "${HOME}/.emacs.d/" ]]; then
	git clone https://github.com/hlissner/doom-emacs "${HOME}/.emacs.d"
	"${HOME}/.emacs.d/bin/doom" install
	"${HOME}/.emacs.d/bin/doom" sync
fi

DART_PACKAGE_LIST="${PACKAGE_DIR}/dart_packages.txt"
havecmd dart && {
	echo "Installing global dart packages..."
	DART_INSTALLED_PACKAGES="$(dart pub global list | cut -d" " -f1)"
	while read -r dartpkg; do
		if ! grep -qx "${dartpkg}" <<<"${DART_INSTALLED_PACKAGES}"; then
			printf "Installing %s\n" "${dartpkg}"
			dart pub global activate "${dartpkg}"
		fi
	done < <(spkglist "${DART_PACKAGE_LIST}")
}

MIX_PACKAGE_LIST="${PACKAGE_DIR}/mix_archive_packages.txt"
havecmd mix && {
	echo "Installing global pheonix mix archives..."
	MIX_ARCHIVE_LIST="$(mix archive | tac | sed -e '1d; s/^* //; s/-.*//')"
	while read -r mix_pkg; do
		if ! grep -qx "${mix_pkg}" <<<"${MIX_ARCHIVE_LIST}"; then
			mix archive.install --force hex "${mix_pkg}"
		fi
	done < <(spkglist "${MIX_PACKAGE_LIST}")
}

GH_PACKAGE_LIST="${PACKAGE_DIR}/gh_extension_packages.txt"
havecmd gh && {
	GH_INSTALLED_PACKAGES="$(gh extension list | awk '{print $3}')"
	while read -r gh_pkg; do
		if ! grep -qx "${gh_pkg}" <<<"$GH_INSTALLED_PACKAGES"; then
			gh extension install "https://github.com/${gh_pkg}"
		fi
	done < <(spkglist "${GH_PACKAGE_LIST}")
}

clone-repos ~/.config/clone-repos/computer-clone-repos.yaml

havecmd mapscii-at || yarn global add --prefix "${HOME}/.local" git+https://github.com/seanbreckenridge/mapscii-at
