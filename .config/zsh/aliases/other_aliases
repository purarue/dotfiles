#!/bin/zsh
# random aliases for some of my projects/unrelated shorthands

# https://github.com/seanbreckenridge/plaintext-playlist.git
# --msg-level=file=error removes the 'reading from stdin...' info message
alias mpv-from-stdin='mpv --playlist=- --no-audio-display --msg-level=file=error'
alias mpv-shuffle='mpv-from-stdin --shuffle'
alias cm='cd "${PLAINTEXT_PLAYLIST_MUSIC_DIR:-${XDG_MUSIC_DIR:-"${HOME}/Music"}}"'
alias cdpl='cd "${PLAINTEXT_PLAYLIST_PLAYLISTS}"'
alias play='plainplay'
alias pplay='plainplay play'
alias splay='plainplay shuffle'
alias splayall='fd . "$PLAINTEXT_PLAYLIST_PLAYLISTS" -X plainplay shuffleall'
playrg_f() {
	cm
	fd . "$(plainplay playlistdir)" --type file -X cat | rg -i "$*"
}
# play all paths that match whatever I pass as positional arguments
playrg-_f() {
	cm
	playrg_f "$*" | mpv-from-stdin
}
# use aliases so that the 'cd' actually changes directory in the shell
alias playrg='cm; playrg_f'
alias 'playrg-=cm; playrg-_f'
alias playfzf='cm; rg --color never --with-filename --no-heading "" "${PLAINTEXT_PLAYLIST_PLAYLISTS}/"*.txt | sed -e "s|^${PLAINTEXT_PLAYLIST_PLAYLISTS}/||" | fzf'
alias 'playfzf-=playfzf | cut -d":" -f2- | mpv-from-stdin'

bindkey -s '^P' "^uplay^M"
alias "list-albums=cm; find -maxdepth 3 -type f -printf '%h\n' | sort -u | cut -d'/' -f2- | grep -vi twitch"

# https://github.com/seanbreckenridge/raspi-backup
alias pi='ssh pi@$(${REPOS}/raspi-backup/findpi)'
alias raspi-backup='${REPOS}/raspi-backup/backup -d'

# https://github.com/seanbreckenridge/albums
alias favorite-albums='nextalbums favorites > /tmp/favorites.csv && sc-im /tmp/favorites.csv'
alias 'discogs-update=nextalbums discogs-update'

# https://github.com/seanbreckenridge/HPI
source "${REPOS}/HPI/scripts/functions.sh"
source "${REPOS}/HPI-personal/scripts/functions.sh"
PATH="${REPOS}/HPI-personal/scripts:$PATH"
export PATH

# https://github.com/seanbreckenridge/frinkconv
conv() {
	frinkconv "$*"
}

# vps related
# https://github.com/seanbreckenridge/vps
alias shorten='${REPOS}/vps/shorten'
alias remsync='${REPOS}/vps/remsync'
alias remsync_public='REMSYNC_PUBLIC=1 ${REPOS}/vps/remsync' # to push to /p/ (public index)
# to use ranger to quickly remove/add files
alias remsync_ranger='ranger "${HOME}/Documents/remsync" && remsync'
alias remsync_public_ranger='ranger "${HOME}/Documents/remsync_public" && remsync_public'
alias playlist='${REPOS}/vps/playlist'
alias restart-glue='ssh vultr "cd ./code/glue && git pull && ~/vps/super --ctl restart glue-server"'
alias dotfiles-pull='ssh vultr "cd ./.dotfiles && git pull"'
alias approve-comments='${REPOS}/vps/approve_comments'
alias print-new-comments='${REPOS}/vps/approve_comments --print-new-comments'
alias page-hits="curl -s 'https://sean.fish/api/page_hit' | jq '.count'"
# Alt+Shift+V to connect to VPS
bindkey -s '^[V' 'vultr\n'

# Alt+Shift+L to print live twitch channels
# https://github.com/seanbreckenridge/twitchlive
bindkey -s '^[L' 'twitchlive-table\n'

# https://github.com/seanbreckenridge/ttt
CD() {
	cd "$(tttjump)"
}

# https://github.com/seanbreckenridge/exobrain
alias exo='cd "${REPOS}/exobrain"; ranger --cmd="shell ./exosearch"'
alias exoo='cd "${REPOS}/exobrain"; ranger --cmd="shell ./exosearch -o"'

# https://github.com/seanbreckenridge/greasyfork_repo_generator
alias greasyfork_generate='cd ${REPOS}/greasyfork_repo_generator && mix escript.build && greasyfork_archive 96096 --output-file scraped_data.json && ./greasyfork_repo_generator -j scraped_data.json --output-dir ../greasyfork --ignore-ids 37826 && cd ../greasyfork && git status'

# https://github.com/seanbreckenridge/mint
alias budget='python3 -m budget'
alias budget-history='python3 -m budget accounts --graph'
# to edit the account/transaction map information
alias 'budget-config=fd -IH conf.py --full-path ${REPOS}/mint | fzf | xargs -r -I {} editor {}'
budget-summary() {
	if [[ -z "$1" ]]; then
		python3 -m budget summary | glow -
	else
		python3 -m budget summary "$@"
	fi
}

# https://github.com/seanbreckenridge/ttally
TTALLY_ALIASES="${HOME}/.cache/ttally_aliases"
if [[ ! -e "${TTALLY_ALIASES}" ]]; then
	if havecmd ttally; then
		python3 -m ttally generate >"${TTALLY_ALIASES}"
	fi
fi
[[ -e "${TTALLY_ALIASES}" ]] && source "${TTALLY_ALIASES}"
alias 'czd=cz -d'
alias 'czl=while cz; do; done'
alias 'ca=food-now'
b-() {
	echo -n "cals: "
	b-calories "$@"
	echo -n "water: "
	b-water "$@"
}

# https://github.com/seanbreckenridge/tts
alias tts-say='tts -d /tmp/tts.ogg && paplay /tmp/tts.ogg'

# https://github.com/seanbreckenridge/mpv-sockets
# cd to the directory where the current piece of media is playing from
alias mpv-cd-currently-playing='cd "$(dirname "$(mpv-currently-playing)")"'
alias mpv-percent='mpv-get-property "$(mpv-currently-playing --socket | tail -n1)" percent-pos'

# https://github.com/seanbreckenridge/rifleman
alias optimg='rifleman -a image'

# https://github.com/seanbreckenridge/evry
# reset a job (remove the tag file) for an evry job
job-reset() {
	local EVRY_DATA_DIR CHOSEN_TAG
	EVRY_DATA_DIR="$(dirname "$(evry location -tag)")"
	cd "${EVRY_DATA_DIR}"
	CHOSEN_TAG="$(fzf)" && rm -v "${CHOSEN_TAG}"
	cd -
}

# random
alias malup='while true; do; clear; sleep 60; date; [ "$(curl -s -o /dev/null -I -w "%{http_code}" "https://myanimelist.net")" = "200" ] && notify-send "MAL is up"; done'
