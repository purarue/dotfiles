#!/bin/bash

path="$1"
maxln=$(($(tput lines) - 2))

# Find out something about the file:
mimetype=$(file --mime-type -Lb "$path")

# Functions:
# runs a command and saves its output into $output.  Useful if you need
# the return value AND want to use the output in a pipe
try() { output=$(eval '"$@"'); }

# writes the output of the previously used "try" command
dump() { head -n "$maxln" <<<"$output"; }

case "$path" in
*.pickle)
	try show-pickle "$path" && {
		dump
		exit 0
	}
	;;
*.1)
	try man -P cat "$path" && {
		dump
		exit 0
	}
	;;
esac

case "$mimetype" in
inode/directory)
	printf "==> %s Contents <==\n" "$path"
	# shellcheck disable=SC2012
	ls -1 "$path" | head -n "$((maxln - 1))" && exit 0
	;;
# cant display gifs in fzf preview using chafa, so extract the middle image
# from the gif to preview instead
image/gif)
	column_width=$(((COLUMNS / 2) - 2))
	column_height=$((maxln - 2))
	try chafa --size "${column_height}x${column_width}" "$(gifpreview "$path")" 2>/dev/null && {
		dump
		exit 0
	}
	;;
image/*)
	column_width=$(((COLUMNS / 2) - 2))
	column_height=$((maxln - 2))
	try chafa --size "${column_height}x${column_width}" "$path" 2>/dev/null && {
		dump
		exit 0
	}
	;;
# Display information about media files:
video/* | audio/*)
	try exifinfo "$path" && {
		dump
		exit 0
	}
	;;
application/json)
	try print-json "$path" && {
		dump
		exit 0
	}
	;;
# Syntax highlight for text files:
text/* | */xml)
	try pistol "$path" && {
		dump
		exit 0
	}
	;;
esac

# default if extension/mimetype both fail
pistol "$path" | head -n "$maxln"
exit 0
