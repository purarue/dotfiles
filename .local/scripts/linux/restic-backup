#!/usr/bin/env bash
# to use this, I use udiskie, which mounts the drive
# with user permissions in /run/media
#
# the UUID can be found by running lsblk -f
#
# I keep the include/exclude lists for backups
# in ~/Documents/BackupManifest
#
# to skip the cleanup process, I set SKIP_CLEANUP=1
# kondo prompts me to removes a bunch of common
# build/cache directories for programming languages,
# which is useful in case Ive missed one
#
# the other things cleanup/remove extra data in my ~/data
# folder, as well as merge some larger files into single
# instances, so Im not backing up duplicate data

# drive uuid
UUID="${RESTIC_BACKUP_DRIVE_UUID?:'RESTIC_BACKUP_DRIVE_UUID not set'}"

UUID_FILE="/dev/disk/by-uuid/$UUID"
if [[ ! -e "$UUID_FILE" ]]; then
	printf 'Could not find drive with UUID %s\n' "$UUID" >&2
	exit 1
fi
DISK="$(readlink -f "$UUID_FILE")"
MOUNT_POINT="/run/media/$USER/$UUID"
INCLUDE_FILE="$XDG_DOCUMENTS_DIR/BackupManifest/include.txt"
EXCLUDE_FILE="$XDG_DOCUMENTS_DIR/BackupManifest/exclude.txt"

shell() {
	echo "DISK=$DISK"
	echo "MOUNT_POINT=$MOUNT_POINT"
	echo "RESTIC_REPOSITORY=$MOUNT_POINT/backup"
	if [[ -n "$RESTIC_PRINT_PASSWORD" ]]; then
		echo "RESTIC_PASSWORD=${RESTIC_PASSWORD?:'RESTIC_PASSWORD not set'}"
	fi
}

run_backup() {
	shell
	if [[ -z "$DRY" ]] && [[ -z "$SKIP_CLEANUP" ]]; then
		kondo ~/Repos ~/Files
		bleanser-runall
		merge-mpv-history
		merge-browser-history
	fi
	flags=(-r "$MOUNT_POINT/backup" backup --verbose --one-file-system
		--files-from "$INCLUDE_FILE"
		--exclude-file "$EXCLUDE_FILE" "$@")
	echo "Running: restic ${flags[*]}"
	restic "${flags[@]}"
	# update the timestamp on a cache file so we know when the last backup was
	[[ -z "$DRY" ]] && touch "$HOME/.cache/restic-backup.lastrun"
}

main() {
	case "$1" in
	shell)
		# to use this, run `eval "$(system-backup shell)"` in the shell
		# when the drive is mounted
		shell
		;;
	backup)
		if [[ ! -d "$MOUNT_POINT" ]]; then
			echo "Drive not mounted"
			exit 1
		fi
		run_backup
		;;
	restic)
		# run restic directly (useful for any other commands)
		shift
		RESTIC_PRINT_PASSWORD=1 shell
		exec restic -r "$MOUNT_POINT/backup" "$@"
		;;
	dry)
		if [[ ! -d "$MOUNT_POINT" ]]; then
			echo "Drive not mounted"
			exit 1
		fi
		DRY=1 run_backup --dry-run
		;;
	poweroff)
		# unmount and poweroff the drive
		if [[ ! -d "$MOUNT_POINT" ]]; then
			echo "Drive not mounted"
			exit 1
		fi
		udisksctl unmount -b "$DISK"
		udisksctl power-off -b "$DISK"
		;;
	connected)
		# check if the drive is connected
		if [[ -d "$MOUNT_POINT" ]]; then
			echo "Backup drive is connected"
			exit 0
		else
			echo "Backup drive is not connected"
			exit 1
		fi
		;;
	*)
		echo "Usage: $0 [shell|backup|restic|dry|poweroff|connected]"
		exit 1
		;;
	esac
}

main "$@"
