#!/usr/bin/env bash

set -e
set -o pipefail

stars() {
	mystars -3 2>/dev/null | jq -r '.items | .[].arg'
}

mine() {
	local file="$REPOS/projects/cache.json"
	[[ -e "$file" ]] || return
	jq -r '.[] | .html_url' <"$file"
}

browser-github-urls() {
	local cache="$HOME/.cache/repos.cache"
	evry 1 week -browser-github && browser-github --all >"$cache"
	[[ -e "$cache" ]] && cat "$cache"
	fzfcache browser-github --active
}

all() {
	{
		mine
		stars
		browser-github-urls
	} | unique
}

main() {
	local fzf short_url usage
	fzf=0
	short_url=0
	usage='-f => fzf mode, -s => print short url'
	while getopts "fsh" OPT; do
		case "$OPT" in
		f)
			fzf=1
			;;
		s)
			short_url=1
			;;
		h)
			echo "$usage"
			exit 0
			;;
		?)
			echo "$usage"
			exit 1
			;;
		esac
	done
	shift "$((OPTIND - 1))"
	_run() {
		if ((short_url)); then
			all | cut -d'/' -f4-
		else
			all
		fi
	}
	if ((fzf)); then
		_run | fzf "$@"
	else
		_run
	fi
}

main "$@" || exit $?
