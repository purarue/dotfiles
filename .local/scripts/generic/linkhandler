#!/bin/sh

# Feed script a url or file location.
# If an image, it will view in sxiv,
# if a video or gif, it will view in mpv
# if a music file or pdf, it will download,
# otherwise it opens link in browser.

# If no url given. Opens browser. For using script as $BROWSER.
[ -z "$1" ] && {
	"$BROWSER"
	exit
}

command -v tttlog >/dev/null 2>&1 && tttlog "linkhandler $1"

# mp4/mp3 uses stream-* (my stream-link) wrapper scripts, so
# it runs behind `tsp`, meaning lots of podcasts can be
# queued in the task spooler, waits till the previous video
# stops playing before to start new ones

case "$1" in
*mkv | *webm | *mp4 | *youtube.com/watch* | *youtube.com/playlist* | *youtu.be*)
	# a mpv, wrapper that plays videos picture-in-picture
	# set the CLIPBOARD_CONTENTS envvar, else stream-corner grabs it from my clipboard
	export CLIPBOARD_CONTENTS="$1"
	shift # remove url, pass any additional arguments to stream-corner
	setsid -f stream-corner-480 "$@" >/dev/null 2>&1
	;;
*png | *jpg | *jpe | *jpeg | *gif)
	fname="$(echo "$1" | sed "s/.*\///")"
	curl -sL "$1" >"/tmp/${fname}" && sxiv -a "/tmp/${fname}" >/dev/null 2>&1 &
	;;
*mp3 | *flac | *opus | *mp3?source*)
	# stream with stream-audio (wraps stream-link, like stream-corner)
	export CLIPBOARD_CONTENTS="$1"
	shift
	setsid -f stream-audio "$@" >/dev/null 2>&1
	;;
*)
	if [ -f "$1" ]; then
		"$TERMINAL" -e "$EDITOR" "$1"
	else openurl "$1" >/dev/null 2>&1; fi
	;;
esac
