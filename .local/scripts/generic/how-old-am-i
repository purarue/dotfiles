#!/usr/bin/env python3

from datetime import datetime, date

import click


def plural(n: int, s: str) -> str:
    return f"{n} {s}{'s' if n != 1 else ''}"


@click.command()
@click.option(
    "-b",
    "--birthdate",
    "birthdate_str",
    type=str,
    required=True,
    show_envvar=True,
    envvar="BIRTHDATE",
    help="your date of birth in YYYY-MM-DD format",
)
@click.option(
    "-t",
    "--till-next",
    "till_next",
    type=bool,
    default=False,
    is_flag=True,
    help="show number of days till next birthday",
)
def main(birthdate_str: str, till_next: bool) -> None:
    try:
        birthdate: date = datetime.strptime(birthdate_str, "%Y-%m-%d").date()

    except ValueError:
        click.echo(
            "Error: BIRTHDATE is not in the correct format (YYYY-MM-DD).", err=True
        )
    else:
        today: date = date.today()
        age_in_years = (
            today.year
            - birthdate.year
            - int((today.month, today.day) < (birthdate.month, birthdate.day))
        )

        last_birthday = date(today.year, birthdate.month, birthdate.day)
        if last_birthday > today:
            last_birthday = date(today.year - 1, birthdate.month, birthdate.day)

        days_old = (today - last_birthday).days
        if till_next:
            assert days_old <= 365
            days_old = 365 - days_old

        parts: list[str] = []
        if age_in_years > 0 and till_next is False:
            parts.append(plural(age_in_years, "year"))
        if days_old > 0 or till_next is True:
            parts.append(plural(days_old, "day"))

        click.echo(", ".join(parts))


if __name__ == "__main__":
    main()
