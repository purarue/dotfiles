#!/usr/bin/env bash
# 'sourced reminders'
#
usage="Instead of reminding me every 'n' duration to do something, this
uses local data to check if I've done it within that duration

This works by calling a bunch of other executables which return
a zero exit code if I've done the thing within the expected
duration, else exits with exit code '2'

number of scripts which have expired gets displayed in my menu bar,
and if I click it it sends a notification with the script name,
which lets me know what I have left to do

this makes these reminders less obstrusive since I don't have to
feel like I have to do it when some notify-send is sent, but it still
reminds me to do things since the number sits there while I haven't"

declare -a DIRS
DIRS=()

find_execs() {
	for d in "${DIRS[@]}"; do
		find -L "${d}" -type f '(' -executable -o -name '*.enabled' ')' -print0
	done
}

split_sreminders_path() {
	if [[ -z "$SREMINDERS_PATH" ]]; then
		echo 'The SREMINDERS_PATH environment variable is not set. That should contain a colon-delimited list of directories which contain sreminder jobs. E.g., in your shell profile, set:' >&2
		# shellcheck disable=SC2016
		echo 'export SREMINDERS_PATH="${HOME}/.local/sreminders:${HOME}/data/sreminders"'
		return 1
	fi
	IFS=: read -r -a DIRS <<<"$SREMINDERS_PATH"
	unset IFS
}

run_scripts() {
	local name
	case "$1" in
	count)
		run_scripts run | wc -l
		;;
	esac
	find_execs | while read -r -d $'\0' script; do
		case "$1" in
		list)
			echo "$script"
			;;
		run)
			# workaround for running scripts in linked directories
			# https://sean.fish/d/run-script?dark
			if hash run-script; then
				run-script "${script}"
			else
				"${script}"
			fi
			if (($? == 2)); then
				name="$(basename "${script}")"
				echo "${name%%.*}"
			fi
			;;
		esac
	done

}

main() {
	local action='run'
	while getopts 'lhc' opt; do
		case "${opt}" in
		l)
			action='list'
			;;
		c)
			action='count'
			;;
		h)
			printf "Usage: sreminders [-h] [-lc]\n"
			printf "	-l		List scripts which would be run\n"
			printf "	-c		Print number of sreminders\n"
			printf '\n%s\n' "$usage"
			exit 0
			;;
		*) ;;
		esac
	done
	split_sreminders_path
	run_scripts "$action"
}

main "$@"
